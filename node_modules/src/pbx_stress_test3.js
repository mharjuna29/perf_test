import http from 'k6/http';
import { sleep, check } from 'k6';
import { SharedArray } from 'k6/data';

// --- Configuration ---
export const options = {

    stages: [
        { duration: '1m', target: 100 },
        { duration: '2m', target: 200 },
        { duration: '5m', target: 300 },
        { duration: '10m', target: 500 },
        { duration: '2m', target: 0 },
    ],

    thresholds: {
        'http_req_failed': ['rate<0.01'],       // Error rate < 1%
        'http_req_duration': ['p(95)<1000'],     // 95% requests < 1s
    },
};

function getWithRetry(url, headers = {}, maxRetries = 5) {
    let res;
    let backoff = 1;

    for (let i = 0; i < maxRetries; i++) {
        res = http.get(url, { headers });

        if (res.status !== 0 && res.status !== 429 && res.status < 500) {
            return res;
        }

        console.warn(`[Retry ${i + 1}] ${url} failed with status ${res.status || 'NO_RESPONSE'}. Retrying in ${backoff}s`);
        sleep(backoff + Math.random() * 2);
        backoff = Math.min(backoff * 2, 10);
    }

    return res;
}

// --- Utilities ---
function validateLoginResponse(res) {
    try {
        const json = res.json();
        return json && json.data && typeof json.data.token === 'string';
    } catch (err) {
        console.error('Error parsing login response JSON:', err);
        return false;
    }
}

// --- Test Data ---
const users = new SharedArray('users', function () {
    return [
        { email: 'xyz@admin.com', password: 'admin#123' },
        // Tambahkan user lain jika perlu
    ];
});

// --- Core Logic ---
function login(user, maxRetries = 3) {
    const loginUrl = 'https://mypbx.telkom.co.id/api/login';
    const payload = JSON.stringify({
        email: user.email,
        password: user.password,
        visitor_id: '243552f2e1c7629d66b0d3d4a78d7a2c',
    });

    const headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
    };

    let res;
    for (let i = 0; i < maxRetries; i++) {
        res = http.post(loginUrl, payload, { headers });
        const loginValid = check(res, {
            'Login response is 200': (r) => r.status === 200,
            'Login response contains valid token': (r) => validateLoginResponse(r),
        });

        if (loginValid) {
            return res.json().data.token;
        }

        console.warn(`Login attempt ${i + 1} failed, retrying...`);
        sleep(2 + Math.random() * 2);
    }

    console.error('Login completely failed after retries.');
    return null;
}

export function setup() {
    const user = users[0];
    const token = login(user);
    if (!token) {
        throw new Error('Setup failed: unable to login.');
    }
    console.log('Setup success: token acquired.');
    return { token, email: user.email };
}

export default function (data) {
    const headers = {
        Authorization: `Bearer ${data.token}`,
        Accept: 'application/json',
    };
    // Bisa dikembangkan disini, misal akses endpoint lain menggunakan token

        //request ke dashboard
        const dashboardRes = getWithRetry('https://mypbx.telkom.co.id/app/show_dashboard', { headers });
        check(dashboardRes, {
            'Dashboard success (200)': (r) => r.status === 200,
        });
        
    sleep(1);
}
