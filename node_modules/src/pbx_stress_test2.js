import http from 'k6/http';
import { sleep, check } from 'k6';
import { SharedArray } from 'k6/data';

export const options = {

    stages: [
        { duration: '1m', target: 100 },
        { duration: '2m', target: 200 },
        { duration: '5m', target: 300 },
        { duration: '10m', target: 500 },
        { duration: '2m', target: 0 },
    ],

    //   thresholds: {
    //     'http_req_failed': ['rate<0.01'], // error rate max 1%
    //     'http_req_duration': ['p(95)<1000'], // 95% response < 1s
    //   },
};

function getWithRetry(url, headers = {}, maxRetries = 5) {
    let res;
    let backoff = 1;

    for (let i = 0; i < maxRetries; i++) {
        res = http.get(url, { headers });

        if (res.status !== 0 && res.status !== 429 && res.status < 500) {
            return res;
        }

        console.warn(`[Retry ${i + 1}] ${url} failed with status ${res.status || 'NO_RESPONSE'}. Retrying in ${backoff}s`);
        sleep(backoff + Math.random() * 2);
        backoff = Math.min(backoff * 2, 10);
    }

    return res;
}

// Simulasi user credentials (bisa di-random nanti)
const users = new SharedArray('users', function () {
    return [
        { email: 'superadmin@telkompbx.com', password: 'admin123' },
        // tambahkan user lain jika perlu
    ];
});

function login(user) {
    const loginUrl = 'https://mypbx.telkom.co.id/api/login';
    const payload = JSON.stringify({
        email: user.email,
        password: user.password,
        visitor_id: '243552f2e1c7629d66b0d3d4a78d7a2c',
    });

    const headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
    };

    let res = http.post(loginUrl, payload, { headers });

    check(res, {
        'Login Success (200)': (r) => r.status === 200,
    }) || console.error(`Login failed with status: ${res.status} - ${res.body}`);

    return res.status === 200 ? res.json().data.token : null;
}

export function setup() {
    const user = users[0]; // bisa pakai Math.random() untuk random user
    const token = login(user);
    if (!token) {
        throw new Error('Login gagal di setup');
    }
    return { token };
}

export default function (data) {
    const headers = {
        Authorization: `Bearer ${data.token}`,
        Accept: 'application/json',
    };

    //request ke dashboard
    const dashboardRes = getWithRetry('https://mypbx.telkom.co.id/app/show_dashboard', { headers });
    check(dashboardRes, {
        'Dashboard success (200)': (r) => r.status === 200,
    });

    sleep(1); // simulasi user delay antar aksi
}

// export function handleSummary(data) {
//     const failedRate = data.metrics?.http_req_failed?.rate ?? 0;
//     const totalRequests = data.metrics?.http_reqs?.count ?? 0;
//     const duration = data.state?.testRunDurationMs ?? 0;

//     const durationSeconds = (duration / 1000).toFixed(2);
//     const avgDuration = (data.metrics?.http_req_duration?.avg ?? 0).toFixed(2);
//     const p95 = (data.metrics?.http_req_duration?.percentiles?.['p(95)'] ?? 0).toFixed(2);
//     const p99 = (data.metrics?.http_req_duration?.percentiles?.['p(99)'] ?? 0).toFixed(2);

//     // Ambil semua group request berdasarkan endpoint (jika tagging dipakai)
//     const endpoints = Object.entries(data.metrics)
//         .filter(([key]) => key.startsWith('http_req_duration{url::'))
//         .map(([key, metric]) => {
//             const url = key.match(/url::(.*)}/)?.[1] ?? key;
//             return {
//                 url,
//                 avg: metric.avg.toFixed(2),
//                 p95: metric.percentiles['p(95)'].toFixed(2),
//                 count: metric.count,
//             };
//         });

//     const chartLabels = endpoints.map((e) => `"${e.url}"`).join(',');
//     const chartData = endpoints.map((e) => `${e.avg}`).join(',');

//     const html = `
//     <!DOCTYPE html>
//     <html lang="en">
//     <head>
//       <meta charset="UTF-8">
//       <title>K6 Performance Report</title>
//       <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
//       <style>
//         body {
//   font-family: Arial, sans-serif;
//   padding: 20px;
//   background-color: #1e1e1e;
//   color: #f5f5f5;
// }
// table {
//   background: #2d2d2d;
//   border-color: #444;
// }
// th {
//   background-color: #3a3a3a;
// }
// .status-ok {
//   color: #00e676;
// }
// .status-fail {
//   color: #ff5252;
// }
//         canvas {
//           max-width: 100%;
//           margin-top: 40px;
//         }
//       </style>
//     </head>
//     <body>
//       <h1>K6 Performance Test Summary</h1>
//       <table>
//         <tr><th>Total Requests</th><td>${totalRequests}</td></tr>
//         <tr><th>Error Rate</th><td>${(failedRate * 100).toFixed(2)}%</td></tr>
//         <tr><th>Test Duration</th><td>${durationSeconds} seconds</td></tr>
//         <tr><th>Average Response Time</th><td>${avgDuration} ms</td></tr>
//         <tr><th>95th Percentile (p95)</th><td>${p95} ms</td></tr>
//         <tr><th>99th Percentile (p99)</th><td>${p99} ms</td></tr>
//         <tr><th>Status</th><td class="${failedRate < 0.01 ? 'status-ok' : 'status-fail'}">
//           ${failedRate < 0.01 ? '✅ Passed' : '❌ Failed'}
//         </td></tr>
//       </table>
  
//       <h2>📊 Breakdown Per Endpoint</h2>
//       <table>
//         <tr><th>Endpoint</th><th>Avg (ms)</th><th>p95 (ms)</th><th>Requests</th></tr>
//         ${endpoints.map(e => `
//           <tr>
//             <td>${e.url}</td>
//             <td>${e.avg}</td>
//             <td>${e.p95}</td>
//             <td>${e.count}</td>
//           </tr>
//         `).join('')}
//       </table>
  
//       <h2>📈 Response Time per Endpoint</h2>
//       <canvas id="chart" height="100"></canvas>
  
//       <script>
//         const ctx = document.getElementById('chart').getContext('2d');
//         const chart = new Chart(ctx, {
//           type: 'bar',
//           data: {
//             labels: [${chartLabels}],
//             datasets: [{
//               label: 'Avg Response Time (ms)',
//               data: [${chartData}],
//               backgroundColor: 'rgba(0, 122, 204, 0.6)',
//               borderColor: '#007acc',
//               borderWidth: 1
//             }]
//           },
//           options: {
//             responsive: true,
//             scales: {
//               y: {
//                 beginAtZero: true
//               }
//             }
//           }
//         });
//       </script>
//     </body>
//     </html>
//     `;

//     return {
//         'summary.html': html,
//         'summary.json': JSON.stringify(data, null, 2),
//     };
// }